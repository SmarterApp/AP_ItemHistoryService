package org.opentestsystem.ap.item.history;

//import com.github.difflib.DiffUtils;
//import com.github.difflib.UnifiedDiffUtils;
//import com.github.difflib.algorithm.DiffException;
//import com.github.difflib.patch.Patch;
import lombok.extern.slf4j.Slf4j;
import org.apache.commons.io.FileUtils;
import org.eclipse.jgit.api.Git;
import org.eclipse.jgit.api.errors.GitAPIException;
import org.eclipse.jgit.diff.DiffEntry;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.opentestsystem.ap.common.exception.SystemException;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.List;

import static junit.framework.TestCase.assertTrue;

@Slf4j
public class HistoryDiffTest {

    Path filev1;
    Path filev2;

    Path gitRepo;
    Git git;

    @Before
    public void setup() throws GitAPIException {
        try {
            Path version1 = Files.createTempDirectory("version1_");
            this.filev1 = Paths.get(Thread.currentThread().getClass()
                .getResource("/item_200000_v1.json").getFile());
            FileUtils.copyFileToDirectory(filev1.toFile(), version1.toFile());

            Path version2 = Files.createTempDirectory("version2_");
            this.filev2 = Paths.get(Thread.currentThread().getClass()
                .getResource("/item_200000_v2.json").getFile());
            FileUtils.copyFileToDirectory(filev2.toFile(), version2.toFile());

            this.gitRepo = Files.createTempDirectory("gitRepo_");
            this.git = Git.init().setDirectory(this.gitRepo.toFile()).call();

        } catch (IOException ioe) {
            throw new SystemException(ioe);
        }
    }

    @After
    public void tearDown() throws IOException{
        git.getRepository().close();
        FileUtils.deleteDirectory(this.gitRepo.toFile());
    }

//    @Test
//    public void generateDiffUsingDiffUtils() throws IOException, DiffException {
//        List<String> original = Files.readAllLines(filev1);
//        List<String> revised = Files.readAllLines(filev2);
//
//        //generating diff information.
//        Patch<String> diff = DiffUtils.diff(original, revised);
//
//        //generating unified diff format
//        List<String> unifiedDiff = UnifiedDiffUtils
//            .generateUnifiedDiff(filev1.getFileName().toString(), filev1.getFileName().toString(), original, diff, 0);
//
//        String fileUnifiedDiff = String.join("\n", unifiedDiff);
//        System.out.println(fileUnifiedDiff);
//
//        Assert.assertEquals(unifiedDiff.get(0), "--- item-v1.json");
//        Assert.assertEquals(unifiedDiff.get(1), "+++ item-v1.json");
//        Assert.assertEquals(unifiedDiff.get(2), "@@ -34,1 +34,1 @@");
//    }

    @Test
    public void generateDiffUsingJGit() throws IOException, GitAPIException {
        FileUtils.copyFileToDirectory(filev1.toFile(), this.gitRepo.toFile());
        this.git.add().addFilepattern(".").call();

        //Overwrite file with v2 contents
        FileUtils.copyFile(filev2.toFile(), this.gitRepo.resolve("item_200000_v1.json").toFile());
        Path aslFile1 = Paths.get(Thread.currentThread().getClass()
            .getResource("/item_200000_ASL_STEM.mp4").getFile());
        Path aslFile2 = Paths.get(Thread.currentThread().getClass()
            .getResource("/item_200000_ASL_STEM.webm").getFile());

        FileUtils.copyFileToDirectory(aslFile1.toFile(), this.gitRepo.toFile());
        FileUtils.copyFileToDirectory(aslFile2.toFile(), this.gitRepo.toFile());

        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();

        List<DiffEntry> diffEntries = git.diff().setOutputStream(outputStream).call();

        System.out.println(outputStream.toString());

        outputStream.close();

        assertTrue( diffEntries.size() > 0 );

    }

}
